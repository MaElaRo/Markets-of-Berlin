<section class="hero is-fullheight">

  <div id='map' style='width: auto; height: 100vh'></div>

  {{!-- <button class="filter" value="Farmers market">Farmers market</button>
  <button class="filter" value="Covered market">Covered market</button>
  <button class="filter" value="Street-Food-Market">Street food market</button>
  <button class="filter" value="Flea market">Flea market</button> --}}



  <script>
    //delete markers, create new markers
    let state = {
      "Farmers market": true,
      "Covered market": true,
      "Street-Food-Market": true,
      "Flea market": true
    }

   // document.getElementById("search-markets").onclick = () => {
    //  const query = document.querySelector(".searchbar").value;}
    //initial map settings

    mapboxgl.accessToken = 'pk.eyJ1IjoiYW5nbWluc2hlbmciLCJhIjoiY2pydDhjMjlwMXhpaDN5cHMxcjNya2ZmbyJ9.Tc5kmo0vZ1VKJbLK83OloA';
    var map = new mapboxgl.Map({
      container: 'map',
      style: 'mapbox://styles/mapbox/light-v10',
      center: [13.405, 52.52],
      zoom: 11.15,
    });

    // create empty array to store the drawn marker so that they can be removed with a loop.
    let markerArr = []
    const markets = {{{ JSON markets }}}
    // from Alican, between forEach and markets filter, filter markets by name, compare with the value of the form

    function draw() {
      let marketsCopy = []
      for (let market in state) {
        if (state[market])
          marketsCopy = marketsCopy.concat([...markets].filter(el => el.market.marketType === market))
      }
      console.log(markets[0])
      marketsCopy.forEach(market => {
        let popup = new mapboxgl.Popup({ offset: 0, className: 'my-class' })
          .setHTML(`<div class="popup"><p>${market.marketname}</p><p>${market.description}</p><img src="${market.market.marketImg}" alt="" style="width:50px;height:50px;"></div>`)
          .setMaxWidth("none")
        var el = document.createElement('div');
        el.className = 'marker';
        el.style.backgroundImage = `url(/images/${market.market.marketType.toLowerCase().replace(" ", "")}.png)`
        el.style.width = '50px';
        el.style.height = '47px';
        let marker = new mapboxgl.Marker(el)
          .setLngLat([...market.location.coordinates].reverse())
          .setPopup(popup)
          .addTo(map)
        markerArr.push(marker)
      })
    }

    function removeMarker() {
      markerArr.forEach(marker => marker.remove())
      markerArr = []
    }
//
    document.querySelectorAll(".filter").forEach(option => {
      option.addEventListener("change", (event) => {
        console.log("Hello world")
        removeMarker()
        state[event.target.innerHTML] = !state[event.target.innerHTML]
        draw()
      })
    })
//
     const selectType = document.getElementById("filter")
    
      selectType.addEventListener("change", () => {
        console.log(selectType.value)
        removeMarker()
        for (const key in state) {
          state[key] = false
        }
        console.log(state)
        state[selectType.value] = !state[selectType.value]
        draw()
      })

    draw()

    map.addControl(new mapboxgl.NavigationControl());
  </script>
  </section>