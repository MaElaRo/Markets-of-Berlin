<section class="hero is-fullheight">

  <div id='map' style='width: auto; height: 100vh'></div>

  <script>
    //delete markers, create new markers
    let state = {
      type: {
        "Farmers market": true,
        "Covered market": true,
        "Street-Food-Market": true,
        "Flea market": true
      },
      day: {
        "Monday": false,
        "Tuesday": false,
        "Wednesday": false,
        "Thursday": false,
        "Friday": false,
        "Saturday": false,
        "Sunday": false

      }
    }

    //initial map settings
    mapboxgl.accessToken = 'pk.eyJ1IjoiYW5nbWluc2hlbmciLCJhIjoiY2pydDhjMjlwMXhpaDN5cHMxcjNya2ZmbyJ9.Tc5kmo0vZ1VKJbLK83OloA';
    var map = new mapboxgl.Map({
      container: 'map',
      style: 'mapbox://styles/mapbox/light-v10',
      center: [13.405, 52.52],
      zoom: 11.15,
    });
    // create empty array to store the drawn marker so that they can be removed with a loop.
    let markerArr = []
    const markets = {{{ JSON markets }}}
    // from Alican, between forEach and markets filter, filter markets by name, compare with the value of the form


    function draw() {
      let marketsCopy = []
      for (let market in state.type) {
        if (state.type[market])
          marketsCopy = marketsCopy.concat([...markets].filter(el => el.market.marketType === market))
      }

      for (let day in state.day) {
        if (state.day[day]) {
          marketsCopy = marketsCopy.filter(el => {
            const openTimes = el.openingTime;
            const dayArray = openTimes.map(function (item) {
              return item['day'];
            });

            if (dayArray.includes(day)) return true;


          })
        }
      }

      marketsCopy.forEach(market => {


        let popup = new mapboxgl.Popup({ offset: 0, className: 'my-class' })
          .setHTML(`<div class="popup"><p>${market.marketname}</p><p>${market.description}</p>  <a href="/market/${market._id}">Read more</a><img src="${market.market.marketImg}" alt="" style="width:50px;height:50px;"></div>`)
          .setMaxWidth("none")
        var el = document.createElement('div');
        el.className = 'marker';
        el.style.backgroundImage = `url(/images/${market.market.marketType.toLowerCase().replace(" ", "")}.png)`
        el.style.width = '50px';
        el.style.height = '47px';

        let marker = new mapboxgl.Marker(el)
          .setLngLat([...market.location.coordinates].reverse())
          .setPopup(popup)
          .addTo(map)
        markerArr.push(marker)
      })
    }

    function removeMarker() {
      markerArr.forEach(marker => marker.remove())
      markerArr = []
    }

    const selectType = document.getElementById("filter")

    selectType.addEventListener("change", () => {
      removeMarker()

      if (selectType.value === 'Select market type') {
        for (const key in state.type) {
          state.type[key] = true
        }
      } else {
        for (const key in state.type) {
          state.type[key] = false
        }
        state.type[selectType.value] = !state.type[selectType.value]

      }
      draw()
    })

    const selectDay = document.getElementById("filter-days")


    selectDay.addEventListener("change", () => {


      removeMarker()
      if (selectDay.value === 'Select day') {
        for (const key in state.day) {
          state.day[key] = false
        }
      } else {

      for (const key in state.day) {
        state.day[key] = false
      }
      state.day[selectDay.value] = !state.day[selectDay.value]
      }
      draw()
    })
    draw()
    map.addControl(new mapboxgl.NavigationControl());
  </script>
</section>